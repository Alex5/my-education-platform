import reducer, {setArticles} from './articles.slice'
import {ArticlesState, IArticle} from "./articles.types";

test('should add articles array to state', () => {
    const previousState: ArticlesState = {
        articles: []
    }

    const articles: IArticle[] = [
        {
            published: true,
            ownerId: 'I4gujFQE2hWhIFMSSS604hmsIVJ3',
            content: '> Источник: [Jekins](https://gist.github.com/Jekins/2bf2d0638163f1294637)\n\nНастоящий документ предназначен для ознакомления пользователя с функциональными возможностями языка разметки Markdown. \nMarkdown – это облегченный язык разметки, который является инструментом преобразования кода в HTML.\nГлавной особенностью данного языка является максимально простой синтаксис, который служит для упрощения написания и чтения кода разметки, что, в свою очередь, позволяет легко его корректировать.\nТеперь рассмотрим более подробно функции языка разметки Markdown.   \n\nMarkdown не является заменой HTML. Синтаксис Markdown достаточно ограничен, и соответствует лишь небольшому подмножеству элементов HTML. Он включает в себя следующие элементы:\n   \nБлочные элементы\n--------------------------  \n\n##### <a name="Parag"></a>\tПараграфы и разрывы строк\nДля того, чтобы создать параграф с использованием синтаксиса языка Markdown, достаточно отделить строки текста одной (или более) пустой строкой (пустой считается всякая строка, которая не содержит в себе ничего, кроме пробелов и символов табуляции).\nДля того, чтобы вставить видимый перенос строки (элемент `<br/>`) необходимо окончить строку двумя пробелами и нажатием клавиши «Enter». \nМногие элементы синтаксиса Markdown выглядят и работают гораздо лучше в случае, когда их форматируют с помощью «жесткого перевода строк» (разделение строк, осуществленное самим пользователем, а не программой автоматически). К таким элементам относятся цитаты, списки и пр.  \n\n##### <a name="Headers"></a> Заголовки  \nЯзык разметки Markdown поддерживает 2 стиля обозначения заголовков: подчеркивание и выделение символом («#»).\nВыделение заголовков с помощью подчеркивания производится знаками равенства («=») в случае, если заголовок первого уровня, и дефисами («-») в случае, если заголовок второго уровня. Количество знаков подчеркивания не ограничивается.\nПри выделении заголовков с помощью символа («#») используется от одного до шести данных символов, которые устанавливаются в начале строки (перед заголовком). В данном случае количество символов соответствует уровню заголовка. Кроме того, заголовок возможно снабдить закрывающимися символами («#»), хотя это и не является обязательным. Количество закрывающихся символов не обязано соответствовать количеству начальных символов. Уровень заголовка определяется по количеству начальных символов.  \nЗаголовки первого и второго уровней, выполненные с помощью подчеркивания, выглядят следующим образом:\n\n    Заголовок первого уровня\n    ========================\n    Заголовок второго уровня\n    -------------------------\n\nЗаголовки первого, третьего и шестого уровней, выполненные с помощью символа («#»), выглядят следующим образом:\n\t\n    #  Заголовок первого уровня\n    ### Заголовок третьего уровня\n    ###### Заголовок шестого уровня\nПриведенные выше заголовки, выполненные с помощью символа («#») тождественны следующим:\n\n    #  Заголовок первого уровня #\n    ### Заголовок третьего уровня ###\n    ###### Заголовок шестого уровня ######\nВ результате на экран выводится следующее:\n\nЗаголовок первого уровня\n========================\n\nЗаголовок второго уровня\n------------------------\n\n#  Заголовок первого уровня\n### Заголовок третьего уровня\n###### Заголовок шестого уровня\n\n##### <a name="Blockquotes"></a> \tЦитаты  \nДля обозначения цитат в языке Markdown используется знак «больше» («>»). Его можно вставлять как перед каждой строкой цитаты, так и только перед первой строкой параграфа. \nТакже синтаксис Markdown позволяет создавать вложенные цитаты (цитаты внутри цитат). Для их разметки используются дополнительные уровни знаков цитирования («>»).\nЦитаты в Markdown могут содержать всевозможные элементы разметки.\nЦитаты в языке Markdown выглядят следующим образом:\n\n    >Это пример цитаты,\n    >в которой перед каждой строкой\n    >ставится угловая скобка.\n\n    >Это пример цитаты,\n    в которой угловая скобка\n    ставится только перед началом нового параграфа.\n    >Второй параграф.\n\nВложение цитаты в цитату выглядит следующим образом:\n\n    > Первый уровень цитирования\n    >> Второй уровень цитирования\n    >>> Третий уровень цитирования\n    >\n    >Первый уровень цитирования\nВ результате на экран выводится следующее:\n\n>Это пример цитаты,\n>в которой перед каждой строкой\n>ставится угловая скобка.\n\n>Это пример цитаты,\nв которой угловая скобка\nставится только перед началом нового параграфа.\n\n>Второй параграф.\n\nВложенная цитата:\n\n> Первый уровень цитирования\n>> Второй уровень цитирования\n>>> Третий уровень цитирования\n>\n>Первый уровень цитирования\n\n\nУровень цитирования не может превышать 15-й.  \n\n##### <a name="Lists"></a> Списки\nMarkdown поддерживает упорядоченные (нумерованные) и неупорядоченные (ненумерованные) списки.\n Для формирования неупорядоченный списков используются такие маркеры, как звездочки, плюсы и дефисы. Все перечисленные маркеры могут использоваться взаимозаменяемо. \nДля формирования упорядоченных списков в качестве маркеров используются числа с точкой. Важной особенностью в данном случае является то, что сами номера, с помощью которых формируется список, не важны, так как они не оказывают влияния на выходной HTML код. Как бы ни нумеровал пользователь список, на выходе он в любом случае будет иметь упорядоченный список, начинающийся с единицы (1, 2, 3…). Эту особенность стоит учитывать в том случае, когда необходимо использовать порядковые номера элементов в списке, чтобы они соответствовали номерам, получающимся в HTML.\nУпорядоченные списки всегда следует начинать с единицы. Маркеры списков обычно начинаются с начала строки, однако они могут быть сдвинуты, но не более чем на 3 пробела. За маркером должен следовать пробел, либо символ табуляции. \nПри  необходимости в список можно вставить цитату. В этом случае обозначения цитирования ( «>» ) нужно писать с отступом.\nУпорядоченные списки выглядят следующим образом:\n\n    1.\tПроводник\n    2.\tПолупроводник\n    3.\tДиэлектрик\n\nНеупорядоченные списки выглядят следующим образом:\n\n    * Проводник\n    * Полупроводник\n    * Диэлектрик\n\nИли\n\n    - Проводник\n    - Полупроводник\n    - Диэлектрик\n\nИли\n\n    + Проводник\n    + Полупроводник\n    + Диэлектрик\nНа выходе всех трех перечисленных вариантов имеется один и тот же результат.\nВ результате на экран выводится следующее:\n\n1. Проводник\n2. Полупроводник\n3. Диэлектрик\n\nи\n\n+ Проводник\n+ Полупроводник\n+ Диэлектрик\n\nЦитата, вставленная в список, выглядит следующим образом:\n\n    1. Элемент списка с цитатой:\n\n        > Это цитата\n        > внутри элемента списка.\n\n     2. Второй элемент списка\n\nВ результате на экран выводится следующее:\n\n1. Элемент списка с цитатой:\n\n    > Это цитата\n    > внутри элемента списка.\n\n2. Второй элемент списка\n\n\nПри вставке цитат в элементы списка важно учитывать, что элементы списка должны находиться на одном уровне, а цитаты должны указываться с отступом. В случае, если правило с единым уровнем списка не соблюдается, следующий после цитаты элемент списка будет автоматически нумероваться цифрой «1.». \nКроме того, при необходимости в список можно вставить исходный код. В этом случае его нужно писать с двойным отступом – 8 пробелов или 2 символа табуляции. \n\n - Элемент списка, содержащий исходный код\n\n\t\t<исходный код >  \n\n##### <a name="CodeBlocks"></a> Блоки кода\nОтформатированные блоки кода используются в случае необходимости процитировать исходный код программ или разметки. \nДля создания блока кода в языке Markdown необходимо каждую строку параграфа начинать  с отступа, состоящего из четырех пробелов или  одного символа табуляции. Блок кода продолжается до тех пор, пока не встретится строка без отступа (или конец текста).  Внутри блока кода амперсанды («&») и угловые скобки («<» и «>») автоматически преобразуются в элементы HTML разметки. Кроме того, следует отметить, что внутри блоков кода обычный синтаксис Markdown не обрабатывается. \nБлок кода в Markdown выглядит следующим образом:\n\nЭто обычный параграф:\n\n\tЭто блок кода\n\n##### <a name="Lines">\t</a> Горизонтальные линии (разделители)  \n\nДля того чтобы создать горизонтальную линию с использованием синтаксиса языка Markdown, необходимо поместить три (или более)дефиса или звездочки на отдельной строке текста. Между ними возможно располагать пробелы. \nГоризонтальные линии в Markdown выглядят следующим образом:\n\n    Первая часть текста, который необходимо разделить\n    ***\n    Вторая часть текста, который необходимо разделить\n\nИли\n\n    Первая часть текста, который необходимо разделить\n\n    ---\n\n    Вторая часть текста, который необходимо разделить\nВ результате на экран выводится следующее:\n\nПервая часть текста, который необходимо разделить\n***\nВторая часть текста, который необходимо разделить  \n\nПри использовании данного инструмента важно помнить, что после первой части текста и перед второй необходимо оставлять пустую строку. Данное правило необходимо соблюдать только при использовании дефисов. Если его не соблюдать, на экран будет выведен заголовок второго уровня и строка обычного текста.  При использовании символа звездочки данным правилом можно пренебречь.  \n\n Строчные элементы\n-------------------  \n\n##### <a name="Links"></a> Ссылки\nMarkdown поддерживает два стиля оформления ссылок:\n\n - Гиперссылка, с немедленным указанием адреса (внутритекстовая);\n - Гиперссылка, подобная сноске.\n\nПодразумевается, что помимо URL-адреса существует еще текст ссылки. Он заключается в квадратные скобки. \nДля создания внутритекстовой гиперссылки необходимо использовать круглые скобки сразу после закрывающей квадратной. Внутри них необходимо поместить URL-адрес. В них же возможно расположить название, заключенное в кавычки, которое будет отображаться при наведении, но этот пункт не является обязательным. \n \n      [пример](http://example.com/ "Необязательная подсказка")\nВ результате на экран выводится следующее:\n[пример](http://example.com/ "Необязательная подсказка")\nПри ссылке на локальную директорию возможно использование относительного пути (от текущей страницы, сайта и т.п.)  \n\nПри создании сносной гиперссылки вместо целевого адреса используется вторая пара квадратных скобок, внутри которых помещается метка, идентификатор ссылки (id).\n\n    [пример][id]:\nТакже, можно использовать пробел, чтобы отделять 2 пары квадратных скобок: \n\n    [пример] [id]: \n\nВ этом случае возможно определить идентификатор в любом месте документа: \n\n    [id]: http://example.com/ "Необязательная подсказка"\n\nВ результате на экран выводится следующее:\n[пример] [id] \n[id]: http://example.com/ "Необязательная подсказка"\nИными словами, она состоит из следующих элементов:\n\n - Идентификатор ссылки, окружённый квадратными скобками (которым может предшествовать необязательный отступ от одного до трёх пробелов);\n - \tДвоеточие;\n - \tОдин или несколько пробелов (или символов табуляции);\n - \tURL гиперссылки;\n - \tНеобязательный заголовок (подсказка к изображению, которая всплывает при наведении на него) гиперссылки, заключённый либо в двойные или одиночные кавычки, либо в скобки.\n\nИдентификаторы ссылок могут состоять из букв, цифр, пробелов и знаков пунктуации, однако они не чувствительны к регистру. То есть эти два варианта эквивалентны:\n\n    [текст ссылки][a]\n    [текст ссылки][A]\nMarkdown позволяет также использовать неявно выраженный идентификатор (сокращенный). В этом случае метка не приводится, вместо неё текст гиперссылки используется  и в качестве её имени, а вторая пара квадратных скобок остаётся пустою.\nНапример, чтобы сделать слово «Example» гиперссылкой, ведущей на сайт <http://example.com/>, достаточно написать:\n\n    [Example][]\nи затем определить гиперссылку:\n\n    [Example]: http://example.com/\nВ результате на экран выводится следующее:\n[Example][]\n[Example]: http://example.com/  \n\n##### <a name="Emphasis"></a> \tВыделение текста\nMarkdown воспринимает звёздочки «*» и символы подчёркивания «_» как признаки смыслового выделения текста:\n\n - Текст, окружённый одиночными «*» или «_», будет заключен в HTML-тэг `<em>`.\n -  Текст, окружённый двойными «*» или «_», будет заключен в HTML-тэг `<strong>`.\n\nИными словами, текст, окруженный одинарными символами, выделяется курсивным шрифтом, а текст, окруженный двойными символами, выделяется полужирным шрифтом. \nТакже, выделенный фрагмент может находиться в любой части слова. \nТекст, выделенный курсивом с использованием синтаксиса языка Markdown, выглядит следующим образом:\n\n    *Пример*  \n*Пример*  \n\nТекст, выделенный полужирным шрифтом с использованием синтаксиса языка Markdown, выглядит следующим образом:\n\n    **Пример**\n**Пример**  \n\nТекст, выделенный курсивным полужирным шрифтом с использованием синтаксиса языка Markdown выглядит следующим образом:\n\n    ***Пример***\n***Пример***\n\nВсе приведенные выше примеры аналогичны следующим:\n\n    _Пример_\n\n    __Пример__\n\n    Пере___распред___деление\n\n    ___Пример___  \n\n##### <a name="Code"></a>\tКодовые фрагменты строк\nЧтобы отметить фрагмент строки, содержащий код, необходимо окружить его обратными апострофами «`».  При использовании кодовых фрагментов строк текст будет отображаться в виде моноширинного шрифта. \nВ отличие от блоков кода, кодовый фрагмент позволяет поместить код внутрь обычного абзаца текста.\nКодовый фрагмент строки в языке Markdown выглядит следующим образом:\n\nИспользуйте оператор `if`  \n\n##### <a name="Images"></a>\tИзображения\nВ Markdown существует 2 способа вставки изображений в документ:\n\na.\tС помощью непосредственного указания URL-адреса изображения. Синтаксис данной команды выглядит следующим образом:\n\n    ![Альтернативный текст](/путь/к/изображению.jpg)\nили\n\n    ![Альтернативный текст](/путь/к/изображению.jpg "Подсказка")\nИными словами, он состоит из следующих элементов:\n\n - восклицательный знак;\n -  квадратные скобки, в которых указывается альтернативный изображению текст (он станет содержимым атрибута в элементе img);\n -  круглые скобки, содержащие URL-адрес или относительный путь изображения, а также (необязательно) всплывающую подсказку, заключённуе в двойные или одиночные кавычки.\n\nb.\tС помощью метки-идентификатора.  Синтаксис данной команды записывается следующим образом:\n\n    ![Альтернативный текст][id]\nгде «id» — имя определённой метки изображения. Метки изображений определяются при помощи синтаксиса, совершенно идентичного меткам гиперссылок:\n\n    [id]: путь/к/изображению "Необязательная подсказка"\nВажной особенностью является то, что Markdown не позволяет задать размеры изображения (ширину, высоту).  \n\n Дополнительные элементы\n-------------------------  \n\n##### <a name="Backslash Escapes"></a>\tОбратный слеш\nМожет употребляться в Markdown перед специальными символами для того, чтобы они воспринимались в их буквальном (а не служебном) значении. Полный список данных символов приводится ниже:\n\n«\\»  - слеш;  \n\n«`»  - обратный апостроф;  \n\n«*»  - звездочка;  \n\n«_»  - символ подчеркивания;  \n\n«{}»  - фигурные скобки;  \n\n«[]»  - квадратные скобки;  \n\n«()»  - круглые скобки;  \n\n«#»  - символ решетки;  \n\n«+»  - плюс;  \n\n«-»  - минус (дефис);  \n\n«.»  – точка;  \n\n«!»  - восклицательный знак.  \n\n##### <a name="Automatic Links"></a> Автоматические ссылки\nMarkdown поддерживает упрощённый порядок автоматического создания ссылок для URL-адресов и адресов электронной почты. Для этого достаточно поместить URL-адрес или почтовый адрес в угловые скобки, и Markdown сделает его гиперссылкой. В отличие от вышеописанных стилей, в данном случае сам же URL-адрес или почтовый адрес становится и текстом гиперссылки. Автоматические ссылки на адреса электронной почты работают аналогично.\nАвтоматические ссылки в языке Markdown выглядят следующим образом\n\n    <http://example.com/>\nВ результате на экран выводится следующее:\n<http://example.com/>\n\nАвтоматическая ссылка на адрес электронной почты в Markdown выглядит следующим образом\n\n    <address@example.com>\nВ результате на экран выводится следующее:\n<address@example.com>  \n\n##### <a name="SpecialSymbol"></a> Специальные символы HTML\nВ языке HTML существует два символа, требующих специального рассмотрения: это символы («&lt;») и («&amp;»). Левая угловая скобка используется как начало тэга; амперсанды применяются для обозначения специального символа HTML.\nДля того чтобы использовать эти символы в их буквальном смысле, необходимо заменить их элементами HTML, а именно `&lt;` и `&amp;` соответственно.\nПри использовании Markdown подобных действий совершать не нужно. Он позволяет использовать эти символы в исходном виде. В случае если амперсанд используется как часть спецсимвола HTML, он останется неизменным. В противном случае Markdown преобразует его в `&amp;`. \n<br>\n--------<br>\ncopyright: https://github.com/OlgaVlasova/markdown-doc/edit/master/README.md',
            id: 'SNq-QwSfCPdf-EYAtF7R0',
            title: 'Руководство по оформлению Markdown',
            sketch: 'Markdown – это облегченный язык разметки, который является инструментом преобразования кода в HTML.',
            createdAt: 1644408689184,
            accountId: 'mcR6rOMghz_rNNW6o_DyC'
        },
        {
            content: '# My Education Platform\n\nБесплатная платформа для онлайн обучения где собраны полезные материалы по разным направлениям.\n\n## Getting Started\n\nОзнакомится с проектом вы можете по ссылке: [myeducationplatform.ru](https://myeducationplatform.ru/)\n\n### Prerequisites\n\nДля запуска проекта вам потребуется установленный node.js и yarn\n\n### Installing\n\n#### Без firebase\n\n* установить все зависимости ```yarn install```\n* запустить проект ```yarn start```\n\n#### С firebase\n\n* Создать новый проект в firebase\n* Создать .env файл в корне проекта и перенести свои значения которые вам сгенерировал firebase (каких-то может не быть)\n  ```\n  REACT_APP_API_KEY=YOUR FIREBASE API KEY\n  REACT_APP_AUTH_DOMAIN=YOUR FIREBASE AUTH DOMAIN\n  REACT_APP_PROJECT_ID=YOUR FIREBASE PROJECT_ID\n  REACT_APP_STORAGE_BUCKET=YOUR FIREBASE STORAGE_BUCKET\n  REACT_APP_MESSAGING_SENDER_ID=YOUR FIREBASE MESSAGING_SENDER\n  REACT_APP_APP_ID=YOUR FIREBASE APP_ID\n  REACT_APP_MEASUREMENT_ID=YOUR FIREBASE MEASUREMENT_ID\n  ```\n* установить все зависимости ```yarn install```\n* запустить проект ```yarn start```\n\n## Running the tests\n\nТесты появятся позже...\n\n## Deployment\n\nЕсли вы настроили свой проект firebase ознакомтесь с документацией по развёртывание проекта: [Firebase hosting quickstart](https://firebase.google.com/docs/hosting/quickstart/)\n\n## Built With\n* [React 17](https://ru.reactjs.org/)\n* [Redux Toolkit](https://redux-toolkit.js.org/)\n* [React Router 6](https://reactrouter.com/)\n* [Styled Components](https://styled-components.com/)\n* [Geist UI (как UI фреймворк)](https://geist-ui.dev/en-us)\n* [Firebase](https://firebase.google.com/)\n* [React Markdown для статей](https://github.com/remarkjs/react-markdown/)\n\n## Contributing\n\nПожалуйста прочтите [CONTRIBUTING.md](https://github.com/Alex5/my-education-platform/blob/master/CONTRIBUTING.md) для получения подробной информации о нашем кодексе поведения и процессе отправки нам pull запросов.\n\n## Versioning\n\nМы используем [SemVer](http://semver.org/) для управления версиями. Доступные версии см. в [тегах в этом репозитории](https://github.com/Alex5/my-education-platform/tags).\n\n## Authors\n\n* **Ilin Aleksei** - *Автор проекта* - [Alex5](https://github.com/Alex5)\n\n## License\n\nЭтот проект находится под лицензией MIT — подробности см. в файле [LICENSE](https://github.com/Alex5/my-education-platform/blob/master/LICENSE)\n',
            id: 'fWbjvhubvRI9_DN5IBt-j',
            accountId: 'mcR6rOMghz_rNNW6o_DyC',
            published: true,
            title: 'О проекте',
            createdAt: 1644609883185,
            ownerId: 'I4gujFQE2hWhIFMSSS604hmsIVJ3',
            sketch: 'README проекта'
        },
        {
            accountId: 'mcR6rOMghz_rNNW6o_DyC',
            createdAt: 1644604053084,
            title: 'Readme образец',
            content: '# Project Title\n\nOne Paragraph of project description goes here\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\n\n### Prerequisites\n\nWhat things you need to install the software and how to install them\n\n```\nGive examples\n```\n\n### Installing\n\nA step by step series of examples that tell you how to get a development env running\n\nSay what the step will be\n\n```\nGive the example\n```\n\nAnd repeat\n\n```\nuntil finished\n```\n\nEnd with an example of getting some data out of the system or using it for a little demo\n\n## Running the tests\n\nExplain how to run the automated tests for this system\n\n### Break down into end to end tests\n\nExplain what these tests test and why\n\n```\nGive an example\n```\n\n### And coding style tests\n\nExplain what these tests test and why\n\n```\nGive an example\n```\n\n## Deployment\n\nAdd additional notes about how to deploy this on a live system\n\n## Built With\n\n* [Dropwizard](http://www.dropwizard.io/1.0.2/docs/) - The web framework used\n* [Maven](https://maven.apache.org/) - Dependency Management\n* [ROME](https://rometools.github.io/rome/) - Used to generate RSS Feeds\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](https://gist.github.com/PurpleBooth/b24679402957c63ec426) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags). \n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/your/project/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## Acknowledgments\n\n* Hat tip to anyone whose code was used\n* Inspiration\n* etc\n\n',
            published: true,
            ownerId: 'I4gujFQE2hWhIFMSSS604hmsIVJ3',
            id: 'm83c_t-9r-dvBElN1jN5l',
            sketch: ''
        }
    ]

    expect(reducer(previousState, setArticles(articles))).toEqual({articles});
})